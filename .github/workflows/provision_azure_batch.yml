name: Provision Azure Batch

on:
  workflow_dispatch:

jobs:
  provision-batch:
    runs-on: ubuntu-24.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Generate Random IDs
      id: generate_ids
      run: |
        export JOB_ID="job-$RANDOM"
        export TASK_ID="task-$RANDOM"
        echo "JOB_ID=$JOB_ID" >> $GITHUB_ENV
        echo "TASK_ID=$TASK_ID" >> $GITHUB_ENV
        echo "ENVIRONMENT=dev" >> $GITHUB_ENV

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: latest
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Initialize Terraform
      run: terraform init
      working-directory: terraform

    - name: Plan Terraform
      run: terraform plan -input=false -var="project_name=${{ secrets.PROJECT }}" -var="environment=${{ env.ENVIRONMENT }}"
      working-directory: terraform

    - name: Apply Terraform
      if: github.ref == 'refs/heads/main'
      run: terraform apply -auto-approve -input=false -var="project_name=${{ secrets.PROJECT }}" -var="environment=${{ env.ENVIRONMENT }}"
      working-directory: terraform

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.23'

    - name: Install dependencies
      run: go mod download

    - name: Build
      run: go build -v ./...


    - name: Install Azure CLI
      run: |
        sudo apt-get update
        sudo apt-get install -y zip
        curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
  
    - name: Login to Azure
      run: |
        az login --service-principal \
          --username ${{ secrets.ARM_CLIENT_ID }} \
          --password ${{ secrets.ARM_CLIENT_SECRET }} \
          --tenant ${{ secrets.ARM_TENANT_ID }}
        az account set --subscription ${{ secrets.ARM_SUBSCRIPTION_ID }}
  
    - name: Create Application Package
      run: |
        zip -r csv_to_parquet.zip csv_to_parquet example.csv
        az batch application package create \
          --resource-group ${{ env.ENVIRONMENT }}-${{ secrets.PROJECT }}-rg \
          --name ${{ env.ENVIRONMENT }}${{ secrets.PROJECT }}ba001 \
          --application-name csv_to_parquet \
          --package-file csv_to_parquet.zip \
          --version-name 1.0
  
    - name: Create Batch Job
      run: |
        az batch job create \
          --account-name ${{ env.ENVIRONMENT }}${{ secrets.PROJECT }}ba001 \
          --account-endpoint ${{ env.ENVIRONMENT }}${{ secrets.PROJECT }}ba001.swedencentral.batch.azure.com \
          --account-key ${{ secrets.AZ_BATCH_ACCOUNT_KEY }} \
          --id ${{ env.JOB_ID }} \
          --pool-id ${{ env.ENVIRONMENT }}${{ secrets.PROJECT }}ba001-pool-001
  
    - name: Create Batch Task
      run: |
        az batch task create \
          --job-id ${{ env.JOB_ID }} \
          --task-id ${{ env.TASK_ID }} \
          --command-line '/bin/bash -c "$AZ_BATCH_APP_PACKAGE_csv_to_parquet_1_0/csv_to_parquet -input $AZ_BATCH_APP_PACKAGE_csv_to_parquet_1_0/example.csv -output /tmp/example.parquet"' \
          --application-package-references "csv_to_parquet#1.0" \
          --account-name ${{ env.ENVIRONMENT }}${{ secrets.PROJECT }}ba001 \
          --account-endpoint ${{ env.ENVIRONMENT }}${{ secrets.PROJECT }}ba001.swedencentral.batch.azure.com \
          --account-key ${{ secrets.AZ_BATCH_ACCOUNT_KEY }}